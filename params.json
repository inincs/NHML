{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"The Neuromorphic Hardware Markup Language","body":"### Welcome to NHML - 'The Neuromorphic Hardware Markup Language'.\r\n\r\nThe \"neuromorphic hardware description language\" aims at generalizing a mapping workflow necessary to automatically generate valid hardware configurations given an abstract neural network description. A distant goal would be to establish some kind of neuromorphic operating system.\r\n\r\n\r\nJoining our efforts will hopefully lead to:\r\n\r\n- Save man power (at least in the long run)\r\n\r\n- shorter from hardware testing to modelling times\r\n\r\n- higher software quality\r\n\r\n\r\nSince this is a major task we will first require to establish common ground. Even if you are not planning on contributing it would be great of you to join and explain to us your individual system, requirements and wishes.\r\n\r\n\r\n### Capoc Caccia Results\r\n\r\nHaving a common way of describing neuromorphic systems is nice but rather useless, unless one can provide a tool chain atomizing certain parts of the workflow. We therefore discussed the following questions during the workshop:\r\n\r\n### What is meant to be the role of NHML ? \r\n\r\nThe main purpose should be process atomization rather than another barely readable documentation format. Even tough, it would be nice to have facilities for putting extra data in which in turn could be used to query databases for e.g. the best suitable system given a task or visualize the hardware systems specification in some gui to get a glimpse of what is there.\r\n\r\n### What kind of content should go into such a file ?\r\n\r\nWe agreed on XML as the basic file format, because there are countless tools out there and for basically any language.\r\n\r\nRepresentations of data have been a big concern. So, for instance things which should definitely included are:\r\n  - Available Resources (including Constraints)\r\n  - Physical Topology (including Constraints)\r\n  - Parameters (including Constraints):\r\n    - analog/digital parameters (constraints: precission, range)\r\n    - calibration data\r\n    - time\r\n\r\n### Which kinds of hardware should this file attempt to describe \r\n\r\nObviously neuromorphic chips, furthermore it could be very useful to also describe event based sensors like retinas in such a format. The data could then be used to represent such devices as spike sources in abstract neural network description languages (like e.g. pyNN).\r\n\r\n\r\n### Strategy for the Future \r\n\r\nWe decided to generate XML templates one from each lab to gain a perspective on which kinds of information each group expects to have in the nhml file.\r\nThere should also be a brief description for each type of entry by the author to state his intentions about what this might be good for in an automated workflow.\r\nWe will then take these files, find common denominators and merge them to cover the variety of neuromorphic hardware being used in our labs.\r\n\r\nMost importantly, we want to join forces and develop tools that can take advantage of NHML to access the hardware in terms of user front-end or tools easing configuration.\r\n\r\n\r\n\r\n","name":"NHML","google":""}